docker_builder:
  name: Build
  only_if: $CIRRUS_BRANCH != $CIRRUS_DEFAULT_BRANCH
  env:
    # Android Command-line tools were obtained with https://stackoverflow.com/a/78890086/7009800
    matrix:
      - ANDROID_CLT_VERSION: 9123335 # v8, latest compatible with JDK 8+
        JDK_VERSION: 8
      - ANDROID_CLT_VERSION: 9862592 # v10, latest compatible with JDK 11+
        JDK_VERSION: 11
      - ANDROID_CLT_VERSION: 11479570 # v13, latest compatible with JDK 17+
        JDK_VERSION: 17
      - ANDROID_CLT_VERSION: 11479570 # v13, latest compatible with JDK 17+
        JDK_VERSION: 21
  export_env_vars_script:
    - echo "ANDROID_CLT_VERSION=$ANDROID_CLT_VERSION" >> $CIRRUS_ENV
    - echo "JDK_VERSION=$JDK_VERSION" >> $CIRRUS_ENV
  info_script:
    - docker --version
    - echo "Building Android SDK with Android Command-line tools $ANDROID_CLT_VERSION and JDK $JDK_VERSION"
  version_script: docker --version
  setup_script:
    - docker buildx create --name multibuilder
    - docker buildx use multibuilder
    - docker buildx inspect --bootstrap
  build_tools_script: |
    docker buildx build --platform linux/amd64,linux/arm64 \
      --build-arg android_clt_version=$ANDROID_CLT_VERSION \
      --build-arg jdk_version=$JDK_VERSION \
      --tag ghcr.io/cirruslabs/android-sdk:tools-jdk${JDK_VERSION} \
      sdk/tools
  build_sdk_script: |
    docker buildx build --platform linux/amd64,linux/arm64 \
      --build-arg jdk_version=$JDK_VERSION \
      --tag ghcr.io/cirruslabs/android-sdk:34-jdk${JDK_VERSION} \
      sdk/34
  build_ndk_script: |
    docker buildx build --platform linux/amd64,linux/arm64 \
      --build-arg jdk_version=$JDK_VERSION \
      --tag ghcr.io/cirruslabs/android-sdk:34-ndk-jdk${JDK_VERSION} \
      sdk/34-ndk

docker_builder:
  name: Push
  only_if: $CIRRUS_BRANCH == $CIRRUS_DEFAULT_BRANCH
  env:
    # Android Command-line tools were obtained with https://stackoverflow.com/a/78890086/7009800
    matrix:
      - ANDROID_CLT_VERSION: 9123335 # v8, latest compatible with JDK 8+
        JDK_VERSION: 8
      - ANDROID_CLT_VERSION: 9862592 # v10, latest compatible with JDK 11+
        JDK_VERSION: 11
      - ANDROID_CLT_VERSION: 11479570 # v13, latest compatible with JDK 17+
        JDK_VERSION: 17
      - ANDROID_CLT_VERSION: 11479570 # v13, latest compatible with JDK 17+
        JDK_VERSION: 21
    GITHUB_TOKEN: ENCRYPTED[!82ed873afdf627284305afef4958c85a8f73127b09978a9786ac521559630ea6c9a5ab6e7f8315abf9ead09b6eff6eae!]
  export_env_vars_script:
    - echo "ANDROID_CLT_VERSION=$ANDROID_CLT_VERSION" >> $CIRRUS_ENV
    - echo "JDK_VERSION=$JDK_VERSION" >> $CIRRUS_ENV
  info_script:
    - docker --version
    - echo "Building Android SDK with Android Command-line tools $ANDROID_CLT_VERSION and JDK $JDK_VERSION"
  login_script:
    - echo $GITHUB_TOKEN | docker login ghcr.io -u fkorotkov --password-stdin
  setup_script:
    - docker buildx create --name multibuilder
    - docker buildx use multibuilder
    - docker buildx inspect --bootstrap
  build_tools_script: |
    docker buildx build --platform linux/amd64,linux/arm64 --push \
      --build-arg android_clt_version=$ANDROID_CLT_VERSION \
      --build-arg jdk_version=$JDK_VERSION \
      --tag ghcr.io/cirruslabs/android-sdk:tools-jdk${JDK_VERSION} \
      sdk/tools
  build_sdk_script: |
    docker buildx build --platform linux/amd64,linux/arm64 --push \
      --build-arg jdk_version=$JDK_VERSION \
      --tag ghcr.io/cirruslabs/android-sdk:34-jdk${JDK_VERSION} \
      sdk/34
  build_ndk_script: |
    docker buildx build --platform linux/amd64,linux/arm64 --push \
      --build-arg jdk_version=$JDK_VERSION \
      --tag ghcr.io/cirruslabs/android-sdk:34-ndk-jdk${JDK_VERSION} \
      sdk/34-ndk

task:
  name: Smoke Test
  container:
    dockerfile: sdk/tools/Dockerfile
    cpu: 4
    memory: 8G
    kvm: "true"
  env:
    EMULATOR_IMAGE: system-images;android-34;aosp_atd;x86_64
    ANDROID_CLT_VERSION: 11479570 # v13, latest compatible with JDK 17+
    JDK_VERSION: 17
  setup_script: |
    sdkmanager --install "platforms;android-34"
    sdkmanager --install "build-tools;34.0.0"
  clone_script: |
    git clone https://github.com/android/testing-samples.git
  install_android_image_script:
    sdkmanager --install "$EMULATOR_IMAGE"
  create_emulator_script: |
    avdmanager -s create avd -n MyAVD -k "$EMULATOR_IMAGE"
    cat << EOF >> ~/.android/avd/MyAVD.avd/config.ini
    hw.cpu.ncore=2
    hw.gpu.enabled=yes
    hw.gpu.mode=swiftshader_indirect
    hw.ramSize=3072
    disk.dataPartition.size=6G
    vm.heapSize=576
    hw.lcd.density=440
    hw.lcd.height=2220
    hw.lcd.width=1080
    EOF
  start_emulator_background_script:
    - $ANDROID_HOME/emulator/emulator @MyAVD -verbose -no-snapshot-save -no-window -noaudio -no-boot-anim -accel on
  wait_for_emulator_script:
    - android-wait-for-emulator
  run_tests_script: |
    cd testing-samples
    cd runner/AndroidTestOrchestratorSample
    ./gradlew :app:connectedAndroidTest
